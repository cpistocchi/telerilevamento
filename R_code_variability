# MISURE DI VARIABILITà

# Pacchetti usati
library(raster)
library(RStoolbox) # Per calcolare la variabilità e visualizzare l'immagine
library(ggplot2) # Per vedere l'immagine e fare vari grafici
library(patchwork) # Per unire grafici e plot
library(viridis)

setwd("C:/lab/") # Setting della working directory

# Importazione dell'immagine del ghiacciaio del Similaun
sen <- brick("sentinel.png")
sen

# Plot dell'immagine con la funzione ggRGB, con NIR nella componente red e così via
ggRGB (sen, 1, 2, 3, stretch="lin")
# Con ggRGB l'argomento stretch si può omettere perchè viene fatto automaticamente, cosa che invece non è possibile con plotRGB

# Plot dell'immagine mettendo NIR nella componente green
ggRGB (sen, 2, 1, 3, stretch="lin")
# Questa composizione di bande fa vedere molto bene la roccia in viola, la neve bianca (in grande contrasto), i crepacci si vedono benissimo, praterie verde chiaro e boschi verde scuro

# Unione di questi due grafici
g1 <- ggRGB (sen, 1, 2, 3, stretch="lin")  # Assegnazione del primo plot a una variabile di nome g1 e faciamo lo stesso con il plot 2
g2 <- ggRGB (sen, 2, 1, 3, stretch="lin")
g1 + g2

# Calcolo della variabilità sul layer NIR
nir <- sen[[1]] # Associamo a nir il primo elemento dell'immagine sen (il primo layer che sappiamo essere NIR in questo caso)
nir
plot(nir) # Faccio il plot di nir per dare un'occhiata, e vedo già che si vede molta variabilità, almeno a livello visivo
sd3 <- focal(nir, matrix(1/9, nrow=3, ncol=3), fun=sd)

# Creazione di una colorRampPalette 
clsd <- colorRampPalette(c("blue", "green", "pink", "magenta", "orange", "brown", "red", "yellow"))(100)

# Plot dell'immagine sd usando la colorRampPalette appena creata
plot(sd3, col=clsd)
# Il plot ottenuto mostra la variabilità del sistema
# Nell'immagine vediamo zone a bassa variabilità (in blu), verosimilmente sono zone con la roccia più compatta (senza crepacci), acqua e neve (molto omogenea, con poche differenze fra un px e l'altro)
# Altre zone sono invece ad altissima variabilità (in giallo-rosso-rosa), ad esempio i bordi dei boschi o i crepacci (differenza netta fra roccia e ombra)

# Uso del pacchetto viridis per plottare con ggplot
# Da installare con install.packages("viridis")
# Per cominciare facciamo un ggplot dell'immagine
# Il ggplot del singolo raster è più complesso del ggRGB, perchè la funzione ggplot apre solo un plot vuoto
# Si combina quindi la funzione ggplot alla funzione geom_raster (in cui la geometria dell'immagine è costituita da un insieme di quadrati/rettangoli, cioè px)
ggplot() + 
geom_raster(sd3, mapping = aes(x=x, y=y, fill=layer))
# Viene prodotta un'immagine molto bella e informativa, in cui i crepacci si vedono benissimo e sono molto chiari, così come le zone di variazione fra il bosco e prateria ecc
# Questa è la colorazione generale

# Ora vediamo altre colorazioni.
# Il pacchetto viridis infatti permette di realizzare plot con legende visibili anche da daltonici e persone color-blind
# Esistono tante legende, usiamo in questo caso la legenda di default "viridis" usando la funzione scale_fill_viridis
ggplot() + 
geom_raster(sd3, mapping = aes(x=x, y=y, fill=layer)) + 
scale_fill_viridis() # Poichè non viene specificato niente, è applicata la legenda di default, e cioè viridis
ggtitle("Standard Deviation by viridis")

# Per cambiare la legenda (e sceglierne un'altra che non sia viridis, qui ad esempio cividis):
ggplot() + 
geom_raster(sd3, mapping = aes(x=x, y=y, fill=layer)) + 
scale_fill_viridis(option="cividis") # Scegliamo di usare la legenda cividis
ggtitle("Standard Deviation by viridis")

# Uso della legenda magma
ggplot() + 
geom_raster(sd3, mapping = aes(x=x, y=y, fill=layer)) + 
scale_fill_viridis(option="magma") # Scegliamo di usare la legenda magma
ggtitle("Standard Deviation by viridis")
# A differenza di cividis e viridis, che mostrano molto bene i due estremi di variabilità (massima e minima, con due colori principalmente), magma permette di vedere anche situazioni intermedie di variabilità


